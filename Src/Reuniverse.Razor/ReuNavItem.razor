@using Microsoft.AspNetCore.Components.Routing

<div class="nav-item" title="@(Title ?? Name)" @attributes="AdditionalAttributes">
    @if (IsNavLink)
    {
        <NavLink class="@($"nav-link{(IconOnly ? "" : " wide")}{(IconType == IconType.Discord ? " reu-discord" : "")}")" href="@Href" Match="NavLinkMatch">
            @if (!string.IsNullOrEmpty(IconSrcFromType))
            {
                <img src="@IconSrcFromType" alt="@(AltName ?? Name)" class="icon" width="@IconWidth" height="@IconHeight" />
            }
            @if (!IconOnly && !string.IsNullOrEmpty(Name))
            {
                <span>@Name</span>
            }
        </NavLink>
    }
    else
    {
        <a class="nav-link @(IconOnly ? "" : "wide") @(IconType == IconType.Discord ? "reu-discord" : "")" href="@Href">
            @if (!string.IsNullOrEmpty(IconSrcFromType))
            {
                <img src="@IconSrcFromType" alt="@(AltName ?? Name)" width="@IconWidth" height="@IconHeight" />
            }
            @if (!IconOnly && !string.IsNullOrEmpty(Name))
            {
                <span>@Name</span>
            }
        </a>
    }
</div>

@code {
    [Parameter]
    public bool IsNavLink { get; set; } = true;

    [Parameter]
    public NavLinkMatch NavLinkMatch { get; set; }

    [Parameter]
    public string? IconSrc { get; set; }

    [Parameter]
    public bool IconOnly { get; set; }

    [Parameter]
    public string? Name { get; set; }

    [Parameter]
    public string? AltName { get; set; }

    [Parameter]
    public string? Title { get; set; }

    [Parameter]
    public string? Href { get; set; }

    [Parameter]
    public int IconWidth { get; set; } = 32;

    [Parameter]
    public int IconHeight { get; set; } = 32;

    [Parameter]
    public IconType IconType { get; set; }

    [Parameter(CaptureUnmatchedValues = true)]
    public IDictionary<string, object>? AdditionalAttributes { get; set; }

    private string? IconSrcFromType => IconType switch
    {
        IconType.None => IconSrc,
        _ => $"{Consts.BaseDir}/icons/{IconType.ToString().ToLowerInvariant()}.svg"
    };
}